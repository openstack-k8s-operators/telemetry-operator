apiVersion: v1
kind: Pod
metadata:
  labels:
    prometheus: telemetry-kuttl
  name: prometheus-telemetry-kuttl-0
status:
  containerStatuses:
  - name: config-reloader
    ready: true
    started: true
  - name: prometheus
    ready: true
    started: true
  - name: thanos-sidecar
    ready: true
    started: true
---
apiVersion: v1
kind: Service
metadata:
  name: telemetry-kuttl-prometheus
  ownerReferences:
    - kind: MonitoringStack
      name: telemetry-kuttl
spec:
  ports:
  - name: web
    port: 9090
    protocol: TCP
    targetPort: 9090
---
apiVersion: monitoring.rhobs/v1alpha1
kind: ScrapeConfig
metadata:
  labels:
    service: metricStorage
  name: telemetry-ceilometer
  ownerReferences:
  - kind: MetricStorage
    name: telemetry-kuttl
spec:
  scrapeInterval: 30s
  metricRelabelings:
  - action: labeldrop
    regex: pod
  - action: labeldrop
    regex: namespace
  - action: labeldrop
    regex: job
  - action: labeldrop
    regex: publisher
---
apiVersion: monitoring.rhobs/v1alpha1
kind: ScrapeConfig
metadata:
  labels:
    service: metricStorage
  name: telemetry-rabbitmq
  ownerReferences:
  - kind: MetricStorage
    name: telemetry-kuttl
spec:
  scrapeInterval: 30s
  metricRelabelings:
  - action: labeldrop
    regex: pod
  - action: labeldrop
    regex: namespace
  - action: labeldrop
    regex: job
  - action: labeldrop
---
apiVersion: monitoring.rhobs/v1alpha1
kind: ScrapeConfig
metadata:
  labels:
    service: metricStorage
  name: telemetry-node-exporter
  ownerReferences:
  - kind: MetricStorage
    name: telemetry-kuttl
spec:
  scrapeInterval: 30s
---
apiVersion: monitoring.rhobs/v1alpha1
kind: ScrapeConfig
metadata:
  labels:
    service: metricStorage
  name: telemetry-ceilometer-compute-prom-exporter
  ownerReferences:
  - kind: MetricStorage
    name: telemetry-kuttl
spec:
  scrapeInterval: 30s
---
apiVersion: monitoring.rhobs/v1alpha1
kind: ScrapeConfig
metadata:
  labels:
    service: metricStorage
  name: telemetry-node-exporter-tls
  ownerReferences:
  - kind: MetricStorage
    name: telemetry-kuttl
spec:
  scrapeInterval: 30s
---
apiVersion: monitoring.rhobs/v1alpha1
kind: ScrapeConfig
metadata:
  labels:
    service: metricStorage
  name: telemetry-mysqld-exporter
  ownerReferences:
  - kind: MetricStorage
    name: telemetry-kuttl
spec:
  metricsPath: /probe
  relabelings:
  - action: Replace
    sourceLabels:
    - __address__
    targetLabel: __param_target
  - action: Replace
    regex: (.*):(.*)
    replacement: client.$1
    sourceLabels:
    - __address__
    targetLabel: __param_auth_module
  - action: Replace
    sourceLabels:
    - __param_target
    targetLabel: instance
  - action: Replace
    targetLabel: __address__
  scrapeInterval: 30s
---
apiVersion: observability.openshift.io/v1alpha1
kind: UIPlugin
metadata:
  name: dashboards
spec:
  type: Dashboards
status:
  conditions:
  - status: "True"
    type: Reconciled
  - status: "True"
    type: Available
---
apiVersion: monitoring.rhobs/v1
kind: PrometheusRule
metadata:
  name: telemetry-kuttl
spec:
  groups:
  - name: osp-node-exporter-dashboard.rules
  - name: osp-ceilometer-dashboard.rules
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telemetry-kuttl-tests-telemetry-kuttl-datasource
  namespace: openshift-config-managed
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-openstack-cloud
  namespace: openshift-config-managed
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-openstack-node
  namespace: openshift-config-managed
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-openstack-openstack-network
  namespace: openshift-config-managed
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-openstack-vm
  namespace: openshift-config-managed
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-openstack-rabbitmq
  namespace: openshift-config-managed
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-openstack-network-traffic
  namespace: openshift-config-managed
