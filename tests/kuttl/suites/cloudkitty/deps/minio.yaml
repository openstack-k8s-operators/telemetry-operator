---
# Deploys a new Namespace for the MinIO Pod
apiVersion: v1
kind: Namespace
metadata:
  name: minio-dev # Change this value if you want a different namespace name
  labels:
    name: minio-dev # Change this value to match metadata.name
---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-dev # Change this value to match the namespace metadata.name
spec:
  containers:
  - name: minio
    image: quay.io/minio/minio:latest
    command:
    - /bin/bash
    - -c
    - |
      mkdir -p /data/loki && \
      minio server /data
    env:
    - name: MINIO_ACCESS_KEY
      value: minio
    - name: MINIO_SECRET_KEY
      value: minio123
    volumeMounts:
    - mountPath: /data
      name: storage # Corresponds to the `spec.volumes` Persistent Volume
  volumes:
  - name: storage
    persistentVolumeClaim:
      claimName: minio-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio-dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: crc-csi-hostpath-provisioner
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio-dev
spec:
  selector:
    app: minio
  ports:
    - name: api
      protocol: TCP
      port: 9000
    - name: console
      protocol: TCP
      port: 9090
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: minio-console
  namespace: minio-dev
spec:
  host: console-minio-dev.apps-crc.testing
  to:
    kind: Service
    name: minio
    weight: 100
  port:
    targetPort: console
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: minio-api
  namespace: minio-dev
spec:
  host: api-minio-dev.apps-crc.testing
  to:
    kind: Service
    name: minio
    weight: 100
  port:
    targetPort: api
  wildcardPolicy: None
